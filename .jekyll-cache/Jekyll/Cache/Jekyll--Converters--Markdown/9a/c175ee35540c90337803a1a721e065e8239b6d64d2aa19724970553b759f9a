I"né<h1 id="multi-class--multi-group-differential-expression-analysis">Multi-class / Multi-group Differential Expression Analysis</h1>

<h2 id="introduction">Introduction</h2>

<p>In transcriptomics analysis, we are often interested in identifying differentially expressed genes. For example, if we have two conditions or cell types, we may be interested in what genes are significantly upregulated in condition A vs. B or cell type X vs. Y and vice versa. However, what happens when you have multiple conditions or many cell types? In this tutorial, I will use simulated data to demonstrate potential stategies for performing multi-class or multi-group differential expression analysis.</p>

<h2 id="simulation">Simulation</h2>

<p>First, letâ€™s simulate 5 different classes/groups of samples (say, bulk RNA-seq of 5 different sorted cell types), each with 30 samples each, each expressing 1000 genes total. Note, in this very simplistic demonstration, we will assume that our gene expression follow a normal distribution.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">set.seed</span><span class="p">(</span><span class="m">0</span><span class="p">)</span><span class="w">
</span><span class="n">G</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
</span><span class="n">N</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">30</span><span class="w">
</span><span class="n">M</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">1000</span><span class="w">
</span><span class="n">initmean</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
</span><span class="n">initvar</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10</span><span class="w">
</span><span class="n">mat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">matrix</span><span class="p">(</span><span class="n">rnorm</span><span class="p">(</span><span class="n">N</span><span class="o">*</span><span class="n">M</span><span class="o">*</span><span class="n">G</span><span class="p">,</span><span class="w"> </span><span class="n">initmean</span><span class="p">,</span><span class="w"> </span><span class="n">initvar</span><span class="p">),</span><span class="w"> </span><span class="n">M</span><span class="p">,</span><span class="w"> </span><span class="n">N</span><span class="o">*</span><span class="n">G</span><span class="p">)</span><span class="w">
</span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s1">'gene'</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">M</span><span class="p">)</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s1">'cell'</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="p">(</span><span class="n">N</span><span class="o">*</span><span class="n">G</span><span class="p">))</span><span class="w">
</span><span class="n">group</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">G</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s1">'group'</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">),</span><span class="w"> </span><span class="n">N</span><span class="p">)))</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">colnames</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="w">
</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span><span class="w"> </span><span class="s1">'white'</span><span class="p">,</span><span class="w"> </span><span class="s1">'red'</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"none"</span><span class="p">,</span><span class="w"> </span><span class="n">ColSideColors</span><span class="o">=</span><span class="n">rainbow</span><span class="p">(</span><span class="n">G</span><span class="p">)[</span><span class="n">group</span><span class="p">],</span><span class="w"> </span><span class="n">labCol</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">labRow</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/sim1-1.png" class="img-responsive" /></p>

<p>Now, letâ€™s simulate some differentially upregulated genes unique to each group.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">set.seed</span><span class="p">(</span><span class="m">0</span><span class="p">)</span><span class="w">
</span><span class="n">upreg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
</span><span class="n">upregvar</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10</span><span class="w">
</span><span class="n">ng</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">100</span><span class="w">

</span><span class="n">diff</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">G</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">diff</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">)[(((</span><span class="n">x</span><span class="m">-1</span><span class="p">)</span><span class="o">*</span><span class="n">ng</span><span class="p">)</span><span class="m">+1</span><span class="p">)</span><span class="o">:</span><span class="p">(((</span><span class="n">x</span><span class="m">-1</span><span class="p">)</span><span class="o">*</span><span class="n">ng</span><span class="p">)</span><span class="o">+</span><span class="n">ng</span><span class="p">)]</span><span class="w">
  </span><span class="n">mat</span><span class="p">[</span><span class="n">diff</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">==</span><span class="n">paste0</span><span class="p">(</span><span class="s1">'group'</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;&lt;-</span><span class="w"> </span><span class="n">mat</span><span class="p">[</span><span class="n">diff</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">==</span><span class="n">paste0</span><span class="p">(</span><span class="s1">'group'</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">)]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">rnorm</span><span class="p">(</span><span class="n">ng</span><span class="p">,</span><span class="w"> </span><span class="n">upreg</span><span class="p">,</span><span class="w"> </span><span class="n">upregvar</span><span class="p">)</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">diff</span><span class="p">)</span><span class="w">
</span><span class="p">})</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">diff</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s1">'group'</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">G</span><span class="p">)</span><span class="w">

</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span><span class="w"> </span><span class="s1">'white'</span><span class="p">,</span><span class="w"> </span><span class="s1">'red'</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"none"</span><span class="p">,</span><span class="w"> </span><span class="n">ColSideColors</span><span class="o">=</span><span class="n">rainbow</span><span class="p">(</span><span class="n">G</span><span class="p">)[</span><span class="n">group</span><span class="p">],</span><span class="w"> </span><span class="n">labCol</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">labRow</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/sim2-1.png" class="img-responsive" /></p>

<p>Letâ€™s also simulate some differentially upregulated genes affecting groups of groups. This is typical of cell differentiation processes.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">diff2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="m">2</span><span class="o">:</span><span class="p">(</span><span class="n">G</span><span class="m">-1</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">y</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">x</span><span class="o">+</span><span class="n">G</span><span class="w">
  </span><span class="n">diff</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">)[(((</span><span class="n">y</span><span class="m">-1</span><span class="p">)</span><span class="o">*</span><span class="n">ng</span><span class="p">)</span><span class="m">+1</span><span class="p">)</span><span class="o">:</span><span class="p">(((</span><span class="n">y</span><span class="m">-1</span><span class="p">)</span><span class="o">*</span><span class="n">ng</span><span class="p">)</span><span class="o">+</span><span class="n">ng</span><span class="p">)]</span><span class="w">
  </span><span class="n">mat</span><span class="p">[</span><span class="n">diff</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"group"</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">x</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;&lt;-</span><span class="w"> </span><span class="n">mat</span><span class="p">[</span><span class="n">diff</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"group"</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">x</span><span class="p">)]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">rnorm</span><span class="p">(</span><span class="n">ng</span><span class="p">,</span><span class="w"> </span><span class="n">upreg</span><span class="p">,</span><span class="w"> </span><span class="n">upregvar</span><span class="p">)</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">diff</span><span class="p">)</span><span class="w">
</span><span class="p">})</span><span class="w">

</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span><span class="w"> </span><span class="s1">'white'</span><span class="p">,</span><span class="w"> </span><span class="s1">'red'</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"none"</span><span class="p">,</span><span class="w"> </span><span class="n">ColSideColors</span><span class="o">=</span><span class="n">rainbow</span><span class="p">(</span><span class="n">G</span><span class="p">)[</span><span class="n">group</span><span class="p">],</span><span class="w"> </span><span class="n">labCol</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">labRow</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/sim3-1.png" class="img-responsive" /></p>

<p>Now, we can begin testing different approaches for multi-group differential expression analysis.</p>

<h2 id="1-vs-many-in-group-vs-not-in-group">1 vs many (in group vs. not in group)</h2>

<p>One approach is to consider each group vs. all others. We can use a simple T-test to test whether each gene is significantly upregulated in each group vs. all other groups.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pv.sig</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">levels</span><span class="p">(</span><span class="n">group</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">g</span><span class="p">){</span><span class="w">
  </span><span class="n">ingroup</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)[</span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">g</span><span class="p">]</span><span class="w">
  </span><span class="n">outgroup</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)[</span><span class="o">!</span><span class="p">(</span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">g</span><span class="p">)]</span><span class="w">
  </span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">M</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">t.test</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">ingroup</span><span class="p">],</span><span class="w"> </span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">outgroup</span><span class="p">],</span><span class="w"> </span><span class="n">alternative</span><span class="o">=</span><span class="s1">'greater'</span><span class="p">)</span><span class="o">$</span><span class="n">p.value</span><span class="w">
    </span><span class="c1">#t.test(mat[i,ingroup], mat[i,outgroup])$p.value</span><span class="w">
  </span><span class="p">})</span><span class="w">
  </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="w">
  </span><span class="n">pv.sig</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)[</span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="o">/</span><span class="n">M</span><span class="o">/</span><span class="n">G</span><span class="p">]</span><span class="w"> </span><span class="c1">## bonferonni</span><span class="w">
  </span><span class="n">pv.sig</span><span class="w">
</span><span class="p">})</span><span class="w">
</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">unique</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">pv.sig</span><span class="p">)),],</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span><span class="w"> </span><span class="s1">'white'</span><span class="p">,</span><span class="w"> </span><span class="s1">'red'</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"none"</span><span class="p">,</span><span class="w"> </span><span class="n">ColSideColors</span><span class="o">=</span><span class="n">rainbow</span><span class="p">(</span><span class="n">G</span><span class="p">)[</span><span class="n">group</span><span class="p">],</span><span class="w"> </span><span class="n">labCol</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">labRow</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="(http://localhost:4000/assets/blog/diff1-1.png" class="img-responsive" /></p>

<p>Indeed, we pick up many of the differentially upregulated genes we simulated that are unique to each group ie. in <code class="highlighter-rouge">diff</code>. However, we have a much harder time picking up the differentially upregulated genes marking multiple groups, ie. in <code class="highlighter-rouge">diff2</code> as expected.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">perf</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">pv.sig</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">predtrue</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unique</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">pv.sig</span><span class="p">))</span><span class="w"> </span><span class="c1">## predicted differentially expressed genes</span><span class="w">
  </span><span class="n">predfalse</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">),</span><span class="w"> </span><span class="n">predtrue</span><span class="p">)</span><span class="w"> </span><span class="c1">## predicted not differentially expressed genes</span><span class="w">
  </span><span class="n">true</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">diff</span><span class="p">),</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">diff2</span><span class="p">))</span><span class="w"> </span><span class="c1">## true differentially expressed genes</span><span class="w">
  </span><span class="n">false</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">),</span><span class="w"> </span><span class="n">true</span><span class="p">)</span><span class="w"> </span><span class="c1">## true not differentially expressed genes</span><span class="w">
  </span><span class="n">TP</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">predtrue</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">true</span><span class="p">)</span><span class="w">
  </span><span class="n">TN</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">predfalse</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">false</span><span class="p">)</span><span class="w">
  </span><span class="n">FP</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">predtrue</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">false</span><span class="p">)</span><span class="w">
  </span><span class="n">FN</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">predfalse</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">true</span><span class="p">)</span><span class="w">
  </span><span class="n">sens</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">TP</span><span class="o">/</span><span class="p">(</span><span class="n">TP</span><span class="o">+</span><span class="n">FN</span><span class="p">)</span><span class="w">
  </span><span class="n">spec</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">TN</span><span class="o">/</span><span class="p">(</span><span class="n">TN</span><span class="o">+</span><span class="n">FP</span><span class="p">)</span><span class="w">
  </span><span class="n">prec</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">TP</span><span class="o">/</span><span class="p">(</span><span class="n">TP</span><span class="o">+</span><span class="n">FP</span><span class="p">)</span><span class="w">
  </span><span class="n">fdr</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">FP</span><span class="o">/</span><span class="p">(</span><span class="n">TP</span><span class="o">+</span><span class="n">FP</span><span class="p">)</span><span class="w">
  </span><span class="n">acc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="n">TP</span><span class="o">+</span><span class="n">TN</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">TP</span><span class="o">+</span><span class="n">FP</span><span class="o">+</span><span class="n">FN</span><span class="o">+</span><span class="n">TN</span><span class="p">)</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">data.frame</span><span class="p">(</span><span class="n">sens</span><span class="p">,</span><span class="w"> </span><span class="n">spec</span><span class="p">,</span><span class="w"> </span><span class="n">prec</span><span class="p">,</span><span class="w"> </span><span class="n">fdr</span><span class="p">,</span><span class="w"> </span><span class="n">acc</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">perf</span><span class="p">(</span><span class="n">pv.sig</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##      sens spec prec fdr   acc
## 1 0.25625    1    1   0 0.405
</code></pre></div></div>

<h2 id="anova">ANOVA</h2>

<p>Alternatively, we can use ANOVA (analysis of variance) to identify genes that are variable among and between groups.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">M</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">mydataframe</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,],</span><span class="w"> </span><span class="n">ig</span><span class="o">=</span><span class="n">group</span><span class="p">)</span><span class="w">
  </span><span class="n">fit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">aov</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">ig</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="o">=</span><span class="n">mydataframe</span><span class="p">)</span><span class="w">
  </span><span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)[[</span><span class="m">1</span><span class="p">]][[</span><span class="s2">"Pr(&gt;F)"</span><span class="p">]][</span><span class="m">1</span><span class="p">]</span><span class="w">
</span><span class="p">})</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="w">
</span><span class="n">pv.sig</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)[</span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="o">/</span><span class="n">M</span><span class="o">/</span><span class="n">G</span><span class="p">]</span><span class="w"> </span><span class="c1">## bonferonni</span><span class="w">

</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">pv.sig</span><span class="p">,],</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span><span class="w"> </span><span class="s1">'white'</span><span class="p">,</span><span class="w"> </span><span class="s1">'red'</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"none"</span><span class="p">,</span><span class="w"> </span><span class="n">ColSideColors</span><span class="o">=</span><span class="n">rainbow</span><span class="p">(</span><span class="n">G</span><span class="p">)[</span><span class="n">group</span><span class="p">],</span><span class="w"> </span><span class="n">labCol</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">labRow</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/diff2-1.png" class="img-responsive" /></p>

<p>Note with ANOVA, we need to do an additional step to then figure out which group the variable gene is marking. But compared to testing each group vs. all others, we do get more genes that are differentially upregulated in multiple groups.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">print</span><span class="p">(</span><span class="n">perf</span><span class="p">(</span><span class="n">pv.sig</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##     sens spec prec fdr  acc
## 1 0.3625    1    1   0 0.49
</code></pre></div></div>

<h2 id="testing-combined-groups-pairs-triplets-etc">Testing combined groups (pairs, triplets, etc)</h2>

<p>What if we test all possible pairwise combinations of groups?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pv.sig.pair</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">levels</span><span class="p">(</span><span class="n">group</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">g1</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">g2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">levels</span><span class="p">(</span><span class="n">group</span><span class="p">),</span><span class="w"> </span><span class="n">g1</span><span class="p">)</span><span class="w">
  </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">g2</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">g</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="c1">## test two groups vs. all others</span><span class="w">
    </span><span class="n">ingroup</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)[</span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">g1</span><span class="p">,</span><span class="w"> </span><span class="n">g</span><span class="p">)]</span><span class="w">
    </span><span class="n">outgroup</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)[</span><span class="o">!</span><span class="p">(</span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">g1</span><span class="p">,</span><span class="w"> </span><span class="n">g</span><span class="p">))]</span><span class="w">
    </span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">M</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">t.test</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">ingroup</span><span class="p">],</span><span class="w"> </span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">outgroup</span><span class="p">],</span><span class="w"> </span><span class="n">alternative</span><span class="o">=</span><span class="s1">'greater'</span><span class="p">)</span><span class="o">$</span><span class="n">p.value</span><span class="w">
    </span><span class="p">})</span><span class="w">
    </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="w">
    </span><span class="n">pv.sig</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)[</span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="o">/</span><span class="n">M</span><span class="o">/</span><span class="n">G</span><span class="p">]</span><span class="w"> </span><span class="c1">## bonferonni</span><span class="w">
    </span><span class="n">pv.sig</span><span class="w">
  </span><span class="p">}))</span><span class="w">
</span><span class="p">})</span><span class="w">

</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">unique</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">pv.sig.pair</span><span class="p">)),],</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span><span class="w"> </span><span class="s1">'white'</span><span class="p">,</span><span class="w"> </span><span class="s1">'red'</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"none"</span><span class="p">,</span><span class="w"> </span><span class="n">ColSideColors</span><span class="o">=</span><span class="n">rainbow</span><span class="p">(</span><span class="n">G</span><span class="p">)[</span><span class="n">group</span><span class="p">],</span><span class="w"> </span><span class="n">labCol</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">labRow</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/diff3-1.png" class="img-responsive" /></p>

<p>As expected, we now readily recover the genes upregulated in two groups.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">print</span><span class="p">(</span><span class="n">perf</span><span class="p">(</span><span class="n">pv.sig.pair</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##      sens spec prec fdr   acc
## 1 0.28125    1    1   0 0.425
</code></pre></div></div>

<p>Of course, this approach becomes unreasonable if we have many groups. And if we are doing all pairs, why not all triplets. The number of combinations grow exponentially and quickly becomes intractable.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pv.sig.trip</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">levels</span><span class="p">(</span><span class="n">group</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">g1</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">g2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">levels</span><span class="p">(</span><span class="n">group</span><span class="p">),</span><span class="w"> </span><span class="n">g1</span><span class="p">)</span><span class="w">
  </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">g2</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">gi</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">g3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">levels</span><span class="p">(</span><span class="n">group</span><span class="p">),</span><span class="w"> </span><span class="n">gi</span><span class="p">)</span><span class="w">
    </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">g3</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">gj</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="c1">## test three groups vs. all others</span><span class="w">
      </span><span class="n">ingroup</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)[</span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">g1</span><span class="p">,</span><span class="w"> </span><span class="n">gi</span><span class="p">,</span><span class="w"> </span><span class="n">gj</span><span class="p">)]</span><span class="w">
      </span><span class="n">outgroup</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)[</span><span class="o">!</span><span class="p">(</span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">g1</span><span class="p">,</span><span class="w"> </span><span class="n">gi</span><span class="p">,</span><span class="w"> </span><span class="n">gj</span><span class="p">))]</span><span class="w">
      </span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">M</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">t.test</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">ingroup</span><span class="p">],</span><span class="w"> </span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">outgroup</span><span class="p">],</span><span class="w"> </span><span class="n">alternative</span><span class="o">=</span><span class="s1">'greater'</span><span class="p">)</span><span class="o">$</span><span class="n">p.value</span><span class="w">
      </span><span class="p">})</span><span class="w">
      </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="w">
      </span><span class="n">pv.sig</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)[</span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="o">/</span><span class="n">M</span><span class="o">/</span><span class="n">G</span><span class="p">]</span><span class="w"> </span><span class="c1">## bonferonni</span><span class="w">
      </span><span class="n">pv.sig</span><span class="w">
    </span><span class="p">}))</span><span class="w">
  </span><span class="p">}))</span><span class="w">
</span><span class="p">})</span><span class="w">

</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">unique</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">pv.sig.trip</span><span class="p">)),],</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span><span class="w"> </span><span class="s1">'white'</span><span class="p">,</span><span class="w"> </span><span class="s1">'red'</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"none"</span><span class="p">,</span><span class="w"> </span><span class="n">ColSideColors</span><span class="o">=</span><span class="n">rainbow</span><span class="p">(</span><span class="n">G</span><span class="p">)[</span><span class="n">group</span><span class="p">],</span><span class="w"> </span><span class="n">labCol</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">labRow</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/diff4-1.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">print</span><span class="p">(</span><span class="n">perf</span><span class="p">(</span><span class="n">pv.sig.trip</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##      sens  spec      prec         fdr  acc
## 1 0.32625 0.995 0.9961832 0.003816794 0.46
</code></pre></div></div>

<h2 id="tree-based-binary-split">Tree-based binary split</h2>

<p>My preferred approach is to assume an underlying tree structure relating groups and compare groups based on recursive binary splits along the tree.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## average gene expression for each group</span><span class="w">
</span><span class="n">mat.group</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">cbind</span><span class="p">,</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">levels</span><span class="p">(</span><span class="n">group</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">g</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">rowMeans</span><span class="p">(</span><span class="n">mat</span><span class="p">[,</span><span class="n">group</span><span class="o">==</span><span class="n">g</span><span class="p">])</span><span class="w">
</span><span class="p">}))</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">mat.group</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">levels</span><span class="p">(</span><span class="n">group</span><span class="p">)</span><span class="w">
</span><span class="c1">## construct tree related groups</span><span class="w">
</span><span class="n">hc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">hclust</span><span class="p">(</span><span class="n">dist</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">mat.group</span><span class="p">)),</span><span class="w"> </span><span class="n">method</span><span class="o">=</span><span class="s1">'complete'</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">hc</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/diff5tree-1.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dend</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.dendrogram</span><span class="p">(</span><span class="n">hc</span><span class="p">)</span><span class="w">
</span><span class="n">pv.sig.all</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">()</span><span class="w">

</span><span class="n">pv.recur</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">dend</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">g1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">labels</span><span class="p">(</span><span class="n">dend</span><span class="p">[[</span><span class="m">1</span><span class="p">]])</span><span class="w">
  </span><span class="n">g2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">labels</span><span class="p">(</span><span class="n">dend</span><span class="p">[[</span><span class="m">2</span><span class="p">]])</span><span class="w">
  </span><span class="c1">#print(g1)</span><span class="w">
  </span><span class="c1">#print(g2)</span><span class="w">
  </span><span class="n">ingroup</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)[</span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">g1</span><span class="p">]</span><span class="w">
  </span><span class="n">outgroup</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">group</span><span class="p">)[</span><span class="n">group</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">g2</span><span class="p">]</span><span class="w">
  </span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">M</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">t.test</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">ingroup</span><span class="p">],</span><span class="w"> </span><span class="n">mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">outgroup</span><span class="p">])</span><span class="o">$</span><span class="n">p.value</span><span class="w">
  </span><span class="p">})</span><span class="w">
  </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span><span class="w">
  </span><span class="n">pv.sig</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">pv</span><span class="p">)[</span><span class="n">pv</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="o">/</span><span class="n">M</span><span class="o">/</span><span class="nf">length</span><span class="p">(</span><span class="n">hc</span><span class="o">$</span><span class="n">height</span><span class="p">)]</span><span class="w"> </span><span class="c1">## bonferonni</span><span class="w">
  </span><span class="c1">#print(pv.sig)</span><span class="w">
  </span><span class="n">pv.sig.all</span><span class="w"> </span><span class="o">&lt;&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">pv.sig.all</span><span class="p">,</span><span class="w"> </span><span class="n">pv.sig</span><span class="p">)</span><span class="w"> </span><span class="c1">## save</span><span class="w">
  
  </span><span class="c1">## recursion to go down tree if not leaf</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">is.leaf</span><span class="p">(</span><span class="n">dend</span><span class="p">[[</span><span class="m">1</span><span class="p">]]))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">pv.recur</span><span class="p">(</span><span class="n">dend</span><span class="p">[[</span><span class="m">1</span><span class="p">]])</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">is.leaf</span><span class="p">(</span><span class="n">dend</span><span class="p">[[</span><span class="m">2</span><span class="p">]]))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">pv.recur</span><span class="p">(</span><span class="n">dend</span><span class="p">[[</span><span class="m">2</span><span class="p">]])</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">pv.recur</span><span class="p">(</span><span class="n">dend</span><span class="p">)</span><span class="w">

</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat</span><span class="p">[</span><span class="n">unique</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">pv.sig.all</span><span class="p">)),],</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span><span class="w"> </span><span class="s1">'white'</span><span class="p">,</span><span class="w"> </span><span class="s1">'red'</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"none"</span><span class="p">,</span><span class="w"> </span><span class="n">ColSideColors</span><span class="o">=</span><span class="n">rainbow</span><span class="p">(</span><span class="n">G</span><span class="p">)[</span><span class="n">group</span><span class="p">],</span><span class="w"> </span><span class="n">labCol</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">labRow</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/diff5-1.png" class="img-responsive" /></p>

<p>Of course, the performance of this approach will depend on the initial tree reconstruction.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">print</span><span class="p">(</span><span class="n">perf</span><span class="p">(</span><span class="n">pv.sig.all</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   sens spec prec fdr   acc
## 1 0.34    1    1   0 0.472
</code></pre></div></div>

<h2 id="conclusion">Conclusion</h2>

<p>Try it yourself! What happens if we reduce the degree of upregulation <code class="highlighter-rouge">upreg</code> in the simulation? Or increase in variance? What if instead of using a normal, we simulate a zero-inflated negative binomial more characteristic of single cell RNA-seq data? What if we add in different levels of noise to each sample, differential library sizes, and so forth?</p>

:ET