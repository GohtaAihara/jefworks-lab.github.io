I"f<p>In this very practical R tutorial, we will see if we can use our machine learning skills to study something we enjoy in everyday life: wine.</p>

<p>We will use <a href="https://archive.ics.uci.edu/ml/datasets/Wine+Quality">wine quality data from the UCI Machine Learning Repository</a>. These two datasets are related to red and white variants of the Portuguese “Vinho Verde” wine. To start, read the data into <code class="highlighter-rouge">R</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wine1.url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-white.csv"</span><span class="w">
</span><span class="n">wine1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">wine1.url</span><span class="p">,</span><span class="w"> </span><span class="n">header</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s1">';'</span><span class="p">)</span><span class="w"> 
</span><span class="n">wine2.url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"</span><span class="w">
</span><span class="n">wine2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">wine2.url</span><span class="p">,</span><span class="w"> </span><span class="n">header</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s1">';'</span><span class="p">)</span><span class="w"> 
</span></code></pre></div></div>

<p>We will use only a subset of the data for demonstrative purposes. Each row is a different wine. Columns are features, including physicochemical measurements such as fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, and alcohol, as well as a quality score between 0 and 10 and whether the wine is a red or white.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wine</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">cbind</span><span class="p">(</span><span class="n">wine1</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">,],</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s1">'white'</span><span class="p">),</span><span class="w"> </span><span class="n">cbind</span><span class="p">(</span><span class="n">wine2</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">,],</span><span class="w"> </span><span class="n">type</span><span class="o">=</span><span class="s1">'red'</span><span class="p">))</span><span class="w">
</span><span class="n">wine</span><span class="o">$</span><span class="n">type</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.factor</span><span class="p">(</span><span class="n">wine</span><span class="o">$</span><span class="n">type</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">wine</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   fixed.acidity volatile.acidity citric.acid residual.sugar chlorides
## 1           7.0             0.27        0.36           20.7     0.045
## 2           6.3             0.30        0.34            1.6     0.049
## 3           8.1             0.28        0.40            6.9     0.050
## 4           7.2             0.23        0.32            8.5     0.058
## 5           7.2             0.23        0.32            8.5     0.058
## 6           8.1             0.28        0.40            6.9     0.050
##   free.sulfur.dioxide total.sulfur.dioxide density   pH sulphates alcohol
## 1                  45                  170  1.0010 3.00      0.45     8.8
## 2                  14                  132  0.9940 3.30      0.49     9.5
## 3                  30                   97  0.9951 3.26      0.44    10.1
## 4                  47                  186  0.9956 3.19      0.40     9.9
## 5                  47                  186  0.9956 3.19      0.40     9.9
## 6                  30                   97  0.9951 3.26      0.44    10.1
##   quality  type
## 1       6 white
## 2       6 white
## 3       6 white
## 4       6 white
## 5       6 white
## 6       6 white
</code></pre></div></div>

<h2 id="binary-classification">Binary classification</h2>

<p>First, let’s see if we can train a binary classifier to differentiate between white and red wines. The <code class="highlighter-rouge">caret</code> package in R supports a huge number of models.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">caret</span><span class="p">)</span><span class="w"> 
</span><span class="n">library</span><span class="p">(</span><span class="n">pROC</span><span class="p">)</span><span class="w"> 

</span><span class="n">head</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">getModelInfo</span><span class="p">()),</span><span class="w"> </span><span class="n">n</span><span class="o">=</span><span class="m">30</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "ada"            "AdaBag"         "AdaBoost.M1"    "adaboost"      
##  [5] "amdai"          "ANFIS"          "avNNet"         "awnb"          
##  [9] "awtan"          "bag"            "bagEarth"       "bagEarthGCV"   
## [13] "bagFDA"         "bagFDAGCV"      "bam"            "bartMachine"   
## [17] "bayesglm"       "bdk"            "binda"          "blackboost"    
## [21] "blasso"         "blassoAveraged" "Boruta"         "bridge"        
## [25] "brnn"           "BstLm"          "bstSm"          "bstTree"       
## [29] "C5.0"           "C5.0Cost"
</code></pre></div></div>

<p>What ever model you choose, make sure it supports the type of modeling you want. We will use a <code class="highlighter-rouge">gbm</code>, which supports both classification and regression.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">getModelInfo</span><span class="p">()</span><span class="o">$</span><span class="n">gbm</span><span class="o">$</span><span class="n">type</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "Regression"     "Classification"
</code></pre></div></div>

<p>First, we will try a binary classification problem. Can we train our <code class="highlighter-rouge">gbm</code> classifier to accurately distinguish red and white wines?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">trait</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'type'</span><span class="w">
</span><span class="n">features</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">wine</span><span class="p">[,</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">colnames</span><span class="p">(</span><span class="n">wine</span><span class="p">),</span><span class="w"> </span><span class="n">trait</span><span class="p">)]</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">features</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   fixed.acidity volatile.acidity citric.acid residual.sugar chlorides
## 1           7.0             0.27        0.36           20.7     0.045
## 2           6.3             0.30        0.34            1.6     0.049
## 3           8.1             0.28        0.40            6.9     0.050
## 4           7.2             0.23        0.32            8.5     0.058
## 5           7.2             0.23        0.32            8.5     0.058
## 6           8.1             0.28        0.40            6.9     0.050
##   free.sulfur.dioxide total.sulfur.dioxide density   pH sulphates alcohol
## 1                  45                  170  1.0010 3.00      0.45     8.8
## 2                  14                  132  0.9940 3.30      0.49     9.5
## 3                  30                   97  0.9951 3.26      0.44    10.1
## 4                  47                  186  0.9956 3.19      0.40     9.9
## 5                  47                  186  0.9956 3.19      0.40     9.9
## 6                  30                   97  0.9951 3.26      0.44    10.1
##   quality
## 1       6
## 2       6
## 3       6
## 4       6
## 5       6
## 6       6
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">class</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">wine</span><span class="p">[,</span><span class="w"> </span><span class="n">trait</span><span class="p">]</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">class</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] white white white white white white
## Levels: white red
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ctrl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">trainControl</span><span class="p">(</span><span class="w">
  </span><span class="n">method</span><span class="o">=</span><span class="s2">"repeatedcv"</span><span class="p">,</span><span class="w"> </span><span class="c1">## 10 fold cross validation</span><span class="w">
  </span><span class="n">repeats</span><span class="o">=</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="c1">## 5 repetitions of cross validation</span><span class="w">
  </span><span class="n">summaryFunction</span><span class="o">=</span><span class="n">twoClassSummary</span><span class="p">,</span><span class="w"> </span><span class="c1">## two classes only</span><span class="w">
  </span><span class="n">classProbs</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">,</span><span class="w">
  </span><span class="n">savePred</span><span class="o">=</span><span class="kc">TRUE</span><span class="w">
</span><span class="p">)</span><span class="w">

</span><span class="n">model</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">train</span><span class="p">(</span><span class="w">
  </span><span class="n">x</span><span class="o">=</span><span class="n">features</span><span class="p">,</span><span class="w">
  </span><span class="n">y</span><span class="o">=</span><span class="n">class</span><span class="p">,</span><span class="w">
  </span><span class="n">method</span><span class="o">=</span><span class="s2">"gbm"</span><span class="p">,</span><span class="w">
  </span><span class="n">trControl</span><span class="o">=</span><span class="n">ctrl</span><span class="p">,</span><span class="w">
  </span><span class="n">verbose</span><span class="o">=</span><span class="kc">FALSE</span><span class="w">
</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Based on the ROC curve, it looks like we did pretty well!</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plot.roc</span><span class="p">(</span><span class="n">model</span><span class="o">$</span><span class="n">pred</span><span class="o">$</span><span class="n">obs</span><span class="p">,</span><span class="w"> </span><span class="n">model</span><span class="o">$</span><span class="n">pred</span><span class="o">$</span><span class="n">red</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/images/part1-roc-1.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## double check on new data</span><span class="w">
</span><span class="n">predict</span><span class="p">(</span><span class="n">model</span><span class="p">,</span><span class="w"> </span><span class="n">newdata</span><span class="o">=</span><span class="n">wine1</span><span class="p">[</span><span class="m">100</span><span class="o">:</span><span class="m">110</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="p">(</span><span class="n">ncol</span><span class="p">(</span><span class="n">wine1</span><span class="p">)</span><span class="m">-1</span><span class="p">)])</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] white white white white white white white white white white white
## Levels: white red
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">predict</span><span class="p">(</span><span class="n">model</span><span class="p">,</span><span class="w"> </span><span class="n">newdata</span><span class="o">=</span><span class="n">wine2</span><span class="p">[</span><span class="m">100</span><span class="o">:</span><span class="m">110</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="p">(</span><span class="n">ncol</span><span class="p">(</span><span class="n">wine1</span><span class="p">)</span><span class="m">-1</span><span class="p">)])</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] red red red red red red red red red red red
## Levels: white red
</code></pre></div></div>

<p>What features did our classifier find important and useful?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">importance</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">varImp</span><span class="p">(</span><span class="n">model</span><span class="p">,</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">    
</span><span class="n">print</span><span class="p">(</span><span class="n">importance</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## gbm variable importance
## 
##                       Overall
## chlorides            81.02693
## volatile.acidity     20.41412
## total.sulfur.dioxide 15.50752
## density               9.51392
## sulphates             5.20135
## free.sulfur.dioxide   4.06884
## residual.sugar        2.94265
## pH                    1.73052
## fixed.acidity         0.25914
## citric.acid           0.15809
## alcohol               0.01027
## quality               0.00000
</code></pre></div></div>

<p>Our <code class="highlighter-rouge">gbm</code> classifier found that <code class="highlighter-rouge">chlorides</code> was very useful in distinguishing between red and white wines. Indeed, reds seem to have higher chloride levels than whites.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">wine</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">type</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">chlorides</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/part1-plot-1.png" class="img-responsive" /></p>

<h2 id="regression">Regression</h2>

<p>Now, let’s see if we can train a regression model to predict the wine’s quality given its various physicochemical measurements. We will use the red wine data only here since wine type is known to be a confounder for quality in this particular dataset.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">trait</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'quality'</span><span class="w">
</span><span class="n">features</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">wine2</span><span class="p">[,</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">colnames</span><span class="p">(</span><span class="n">wine2</span><span class="p">),</span><span class="w"> </span><span class="n">trait</span><span class="p">)]</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">features</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   fixed.acidity volatile.acidity citric.acid residual.sugar chlorides
## 1           7.4             0.70        0.00            1.9     0.076
## 2           7.8             0.88        0.00            2.6     0.098
## 3           7.8             0.76        0.04            2.3     0.092
## 4          11.2             0.28        0.56            1.9     0.075
## 5           7.4             0.70        0.00            1.9     0.076
## 6           7.4             0.66        0.00            1.8     0.075
##   free.sulfur.dioxide total.sulfur.dioxide density   pH sulphates alcohol
## 1                  11                   34  0.9978 3.51      0.56     9.4
## 2                  25                   67  0.9968 3.20      0.68     9.8
## 3                  15                   54  0.9970 3.26      0.65     9.8
## 4                  17                   60  0.9980 3.16      0.58     9.8
## 5                  11                   34  0.9978 3.51      0.56     9.4
## 6                  13                   40  0.9978 3.51      0.56     9.4
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">class</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">wine2</span><span class="p">[,</span><span class="w"> </span><span class="n">trait</span><span class="p">]</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">class</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 5 5 5 6 5 5
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ctrl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">trainControl</span><span class="p">(</span><span class="w">
  </span><span class="n">method</span><span class="o">=</span><span class="s2">"repeatedcv"</span><span class="p">,</span><span class="w"> </span><span class="c1">## 10 fold cross validation</span><span class="w">
  </span><span class="n">repeats</span><span class="o">=</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="c1">## 5 repetitions of cross validation</span><span class="w">
  </span><span class="n">savePred</span><span class="o">=</span><span class="kc">TRUE</span><span class="w">
</span><span class="p">)</span><span class="w">
</span><span class="n">model</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">train</span><span class="p">(</span><span class="w">
  </span><span class="n">x</span><span class="o">=</span><span class="n">features</span><span class="p">,</span><span class="w">
  </span><span class="n">y</span><span class="o">=</span><span class="n">class</span><span class="p">,</span><span class="w">
  </span><span class="n">method</span><span class="o">=</span><span class="s2">"gbm"</span><span class="p">,</span><span class="w">
  </span><span class="n">trControl</span><span class="o">=</span><span class="n">ctrl</span><span class="p">,</span><span class="w">
  </span><span class="n">verbose</span><span class="o">=</span><span class="kc">FALSE</span><span class="w">
</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>If we plot our predictions against the real quality score, we see a general positive correlation, but definitely less than perfect.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plot</span><span class="p">(</span><span class="n">model</span><span class="o">$</span><span class="n">pred</span><span class="o">$</span><span class="n">obs</span><span class="p">,</span><span class="w"> </span><span class="n">model</span><span class="o">$</span><span class="n">pred</span><span class="o">$</span><span class="n">pred</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/part2-plot-1.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## double check by predicting on white wine data</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">predict</span><span class="p">(</span><span class="n">model</span><span class="p">,</span><span class="w"> </span><span class="n">newdata</span><span class="o">=</span><span class="n">wine1</span><span class="p">[,</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">colnames</span><span class="p">(</span><span class="n">wine2</span><span class="p">),</span><span class="w"> </span><span class="n">trait</span><span class="p">)])</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">wine1</span><span class="o">$</span><span class="n">quality</span><span class="p">,</span><span class="w"> </span><span class="n">p</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/part2-plot-2.png" class="img-responsive" /></p>

<p>What features did our model find important and useful?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">importance</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">varImp</span><span class="p">(</span><span class="n">model</span><span class="p">,</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">    
</span><span class="n">importance</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## gbm variable importance
## 
##                      Overall
## alcohol               727.07
## volatile.acidity      377.59
## sulphates             346.75
## total.sulfur.dioxide  198.10
## pH                    125.44
## chlorides             118.79
## citric.acid           113.84
## fixed.acidity          96.45
## density                91.38
## residual.sugar         86.11
## free.sulfur.dioxide    72.66
</code></pre></div></div>

<p>Alcohol?! Indeed, we see a general correlation between the quality of the wine and its alcohol content. Perhaps unsurprising haha ;)</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plot</span><span class="p">(</span><span class="n">wine2</span><span class="o">$</span><span class="n">quality</span><span class="p">,</span><span class="w"> </span><span class="n">wine2</span><span class="o">$</span><span class="n">alcohol</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://localhost:4000/assets/blog/part2-quality-1.png" class="img-responsive" /></p>
:ET