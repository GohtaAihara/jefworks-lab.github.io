I"K<h1 id="mapping-snps-and-peaks-to-genes-in-r">Mapping SNPs and peaks to genes in R</h1>

<p>We are often interested in mapping mutations or SNPs to genes, or peaks to genes, or genes to regions of copy number alteration, etc. The general computational problem is quite similar for all these cases: we have two sets of genomic regions that we seek to overlap. This can be accomplished very quickly in R using <code class="highlighter-rouge">GenomicRanges</code>. To learn more about <code class="highlighter-rouge">GenomicRanges</code>, consult <a href="https://bioconductor.org/packages/release/bioc/html/GenomicRanges.html">Bioconductor</a>.</p>

<p>In this particular tutorial, I want to map a set of SNPs to genes.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Sample snps</span><span class="w">
</span><span class="n">snps</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"1:11873"</span><span class="p">,</span><span class="w"> </span><span class="s2">"1:69100"</span><span class="p">,</span><span class="w"> </span><span class="s2">"1:752761"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Sample genes from GTF</span><span class="w">
</span><span class="n">gtfFile</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'Homo_sapiens.GRCh37.75.gtf'</span><span class="w">
</span><span class="n">gtf</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.table</span><span class="p">(</span><span class="n">gtfFile</span><span class="p">,</span><span class="w"> </span><span class="n">header</span><span class="o">=</span><span class="nb">F</span><span class="p">,</span><span class="w"> </span><span class="n">stringsAsFactors</span><span class="o">=</span><span class="nb">F</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s1">'\t'</span><span class="p">,</span><span class="w"> </span><span class="n">nrows</span><span class="o">=</span><span class="m">1000</span><span class="p">)</span><span class="w"> </span><span class="c1"># limit number of rows for testing</span><span class="w">
</span><span class="n">gtf.gene</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gtf</span><span class="p">[</span><span class="n">gtf</span><span class="p">[,</span><span class="m">3</span><span class="p">]</span><span class="o">==</span><span class="s2">"gene"</span><span class="p">,</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">5</span><span class="p">)]</span><span class="w">
</span><span class="n">gene.names</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">gtf</span><span class="p">[</span><span class="n">gtf</span><span class="p">[,</span><span class="m">3</span><span class="p">]</span><span class="o">==</span><span class="s2">"gene"</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">],</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">y</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">strsplit</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="s1">';'</span><span class="p">)[[</span><span class="m">1</span><span class="p">]][</span><span class="m">2</span><span class="p">]</span><span class="w">
    </span><span class="n">gsub</span><span class="p">(</span><span class="s1">' gene_name '</span><span class="p">,</span><span class="w"> </span><span class="s1">''</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">)</span><span class="w">
</span><span class="p">}))</span><span class="w">
</span><span class="n">rownames</span><span class="p">(</span><span class="n">gtf.gene</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gene.names</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">gtf.gene</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##            V1    V4    V5
## DDX11L1     1 11869 14412
## WASH7P      1 14363 29806
## MIR1302-10  1 29554 31109
## FAM138A     1 34554 36081
## OR4G4P      1 52473 54936
## OR4G11P     1 62948 63887
</code></pre></div></div>

<p>Letâ€™s define a few helper functions to help out.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Define a few helper functions</span><span class="w">

</span><span class="cd">#' Convert from string to range</span><span class="w">
</span><span class="cd">#' </span><span class="w">
</span><span class="cd">#' @param pos A vector of strings ex. chr1 2938302 2938329</span><span class="w">
</span><span class="cd">#' @param delim Delimiter for string splitting</span><span class="w">
</span><span class="cd">#' @param region Boolean of whether region or just one position</span><span class="w">
</span><span class="cd">#'</span><span class="w">
</span><span class="cd">#' @returns Dataframe of ranges</span><span class="w">
</span><span class="cd">#' </span><span class="w">
</span><span class="n">string2range</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">pos</span><span class="p">,</span><span class="w"> </span><span class="n">delim</span><span class="o">=</span><span class="s1">' '</span><span class="p">,</span><span class="w"> </span><span class="n">region</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">posp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="w"> </span><span class="n">strsplit</span><span class="p">(</span><span class="n">pos</span><span class="p">,</span><span class="w"> </span><span class="n">delim</span><span class="p">)))</span><span class="w">
    </span><span class="n">posp</span><span class="p">[,</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">posp</span><span class="p">[,</span><span class="m">1</span><span class="p">]</span><span class="w">
	</span><span class="n">posp</span><span class="p">[,</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="nf">as.character</span><span class="p">(</span><span class="n">posp</span><span class="p">[,</span><span class="m">2</span><span class="p">]))</span><span class="w">
	</span><span class="k">if</span><span class="p">(</span><span class="n">region</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">posp</span><span class="p">[,</span><span class="m">3</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="nf">as.character</span><span class="p">(</span><span class="n">posp</span><span class="p">[,</span><span class="m">3</span><span class="p">]))</span><span class="w">
	</span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
	    </span><span class="n">posp</span><span class="p">[,</span><span class="m">3</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">posp</span><span class="p">[,</span><span class="m">2</span><span class="p">]</span><span class="w">
	</span><span class="p">}</span><span class="w">
    </span><span class="nf">return</span><span class="p">(</span><span class="n">posp</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="cd">#' Convert from ranges to GRanges</span><span class="w">
</span><span class="cd">#' </span><span class="w">
</span><span class="cd">#' @param df Dataframe with columns as sequence name, start, and end</span><span class="w">
</span><span class="cd">#' </span><span class="w">
</span><span class="cd">#' @returns GRanges version </span><span class="w">
</span><span class="cd">#' </span><span class="w">
</span><span class="n">range2GRanges</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">require</span><span class="p">(</span><span class="n">GenomicRanges</span><span class="p">)</span><span class="w">
    </span><span class="n">require</span><span class="p">(</span><span class="n">IRanges</span><span class="p">)</span><span class="w">
	</span><span class="n">gr</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GenomicRanges</span><span class="o">::</span><span class="n">GRanges</span><span class="p">(</span><span class="w">
        </span><span class="n">seqnames</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">[,</span><span class="m">1</span><span class="p">],</span><span class="w">
        </span><span class="n">ranges</span><span class="o">=</span><span class="n">IRanges</span><span class="p">(</span><span class="n">start</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">[,</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="n">end</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">[,</span><span class="m">3</span><span class="p">])</span><span class="w">
        </span><span class="p">)</span><span class="w">
    </span><span class="nf">return</span><span class="p">(</span><span class="n">gr</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Now letâ€™s convert our SNPs to <code class="highlighter-rouge">GRanges</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># convert SNPs to GRanges</span><span class="w">
</span><span class="n">snps.ranges</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">string2range</span><span class="p">(</span><span class="n">snps</span><span class="p">,</span><span class="w"> </span><span class="n">delim</span><span class="o">=</span><span class="s2">":"</span><span class="p">,</span><span class="w"> </span><span class="n">region</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">snps.ranges</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   V1     V2     V3
## 1  1  11873  11873
## 2  1  69100  69100
## 3  1 752761 752761
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">snps.granges</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">range2GRanges</span><span class="p">(</span><span class="n">snps.ranges</span><span class="p">)</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">snps.granges</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">snps</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">snps.granges</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## GRanges object with 3 ranges and 0 metadata columns:
##            seqnames           ranges strand
##               &lt;Rle&gt;        &lt;IRanges&gt;  &lt;Rle&gt;
##    1:11873        1 [ 11873,  11873]      *
##    1:69100        1 [ 69100,  69100]      *
##   1:752761        1 [752761, 752761]      *
##   -------
##   seqinfo: 1 sequence from an unspecified genome; no seqlengths
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># convert genes to GRanges</span><span class="w">
</span><span class="n">gtf.granges</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">range2GRanges</span><span class="p">(</span><span class="n">gtf.gene</span><span class="p">)</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">gtf.granges</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gene.names</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">gtf.granges</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## GRanges object with 6 ranges and 0 metadata columns:
##              seqnames         ranges strand
##                 &lt;Rle&gt;      &lt;IRanges&gt;  &lt;Rle&gt;
##      DDX11L1        1 [11869, 14412]      *
##       WASH7P        1 [14363, 29806]      *
##   MIR1302-10        1 [29554, 31109]      *
##      FAM138A        1 [34554, 36081]      *
##       OR4G4P        1 [52473, 54936]      *
##      OR4G11P        1 [62948, 63887]      *
##   -------
##   seqinfo: 1 sequence from an unspecified genome; no seqlengths
</code></pre></div></div>

<p>Now that we have our two <code class="highlighter-rouge">GRanges</code> objects, we can easily overlap them using <code class="highlighter-rouge">GenomicRanges::findOverlaps</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">snps.granges</span><span class="w">
</span><span class="n">r2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gtf.granges</span><span class="w">
</span><span class="n">overlap</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GenomicRanges</span><span class="o">::</span><span class="n">findOverlaps</span><span class="p">(</span><span class="n">r1</span><span class="p">,</span><span class="w"> </span><span class="n">r2</span><span class="p">)</span><span class="w">
</span><span class="c1"># make vector of SNPs to genes</span><span class="w">
</span><span class="n">hits</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">r2</span><span class="p">)[</span><span class="n">slot</span><span class="p">(</span><span class="n">overlap</span><span class="p">,</span><span class="w"> </span><span class="s2">"subjectHits"</span><span class="p">)]</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">hits</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">r1</span><span class="p">)[</span><span class="n">slot</span><span class="p">(</span><span class="n">overlap</span><span class="p">,</span><span class="w"> </span><span class="s2">"queryHits"</span><span class="p">)]</span><span class="w">
</span><span class="n">hits</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##          1:11873          1:69100         1:752761         1:752761 
##        "DDX11L1"          "OR4F5" "RP11-206L10.10"         "FAM87B"
</code></pre></div></div>

<p>We can double check manually that indeed our SNPs fall within these identified genes.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r1</span><span class="p">[</span><span class="nf">names</span><span class="p">(</span><span class="n">hits</span><span class="p">),]</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## GRanges object with 4 ranges and 0 metadata columns:
##            seqnames           ranges strand
##               &lt;Rle&gt;        &lt;IRanges&gt;  &lt;Rle&gt;
##    1:11873        1 [ 11873,  11873]      *
##    1:69100        1 [ 69100,  69100]      *
##   1:752761        1 [752761, 752761]      *
##   1:752761        1 [752761, 752761]      *
##   -------
##   seqinfo: 1 sequence from an unspecified genome; no seqlengths
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">r2</span><span class="p">[</span><span class="n">hits</span><span class="p">,]</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## GRanges object with 4 ranges and 0 metadata columns:
##                  seqnames           ranges strand
##                     &lt;Rle&gt;        &lt;IRanges&gt;  &lt;Rle&gt;
##          DDX11L1        1 [ 11869,  14412]      *
##            OR4F5        1 [ 69091,  70008]      *
##   RP11-206L10.10        1 [745489, 753092]      *
##           FAM87B        1 [752751, 755214]      *
##   -------
##   seqinfo: 1 sequence from an unspecified genome; no seqlengths
</code></pre></div></div>

:ET