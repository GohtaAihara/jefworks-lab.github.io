I"!y<p>In in landmark paper <a href="http://science.sciencemag.org/content/308/5721/523">“Causal Protein-Signaling Networks Derived from
Multiparameter Single-Cell
Data”</a>, Sachs et al.
applied Bayesian Networks on multi-parameter flow cytometry data to
reconstruct signaling relationships and predict novel interpathway
network causalities. Following a <a href="http://www.edii.uclm.es/~useR-2013/Tutorials/Scutari.html">tutorial by Marco
Scutari</a>, I
attempt to reproduce to the best of my abilities the statistical
analysis of the paper using Marco’s <a href="http://www.bnlearn.com/">bnlearn R
package</a>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">bnlearn</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">Rgraphviz</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>First, read in and process the data. Since this is flow cytometry data,
it must be transformed to make the data look more normal and biologically interpretable.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sachs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.table</span><span class="p">(</span><span class="s2">"data/sachs.data.txt"</span><span class="p">,</span><span class="w"> </span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">sachs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.matrix</span><span class="p">(</span><span class="n">sachs</span><span class="p">)</span><span class="w">

</span><span class="c1">## assess distribution of data</span><span class="w">
</span><span class="n">hist</span><span class="p">(</span><span class="n">sachs</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-3-1.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## standard transformation for flow cytometry data</span><span class="w">
</span><span class="n">sachs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">asinh</span><span class="p">(</span><span class="n">sachs</span><span class="p">)</span><span class="w">

</span><span class="c1">## assess distribution of data</span><span class="w">
</span><span class="n">hist</span><span class="p">(</span><span class="n">sachs</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-3-2.png" class="img-responsive" /></p>

<p>Note that the data
appears normally distributed with no obvious zero-inflation or otherwise
missing data, suggesting good quality. We can already readily see correlation structures within the data.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## assess correlations</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">sachs</span><span class="p">[,</span><span class="w"> </span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">sachs</span><span class="p">[,</span><span class="m">2</span><span class="p">])</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-3-3.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">heatmap</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">as.matrix</span><span class="p">(</span><span class="n">sachs</span><span class="p">)),</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"white"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">))(</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"row"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-3-4.png" class="img-responsive" /></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sachs &lt;- data.frame(sachs)
</code></pre></div></div>

<p>We can run some simple Bayesian network structure inferences. However,
these results are highly unstable and do not recapitulate the known network structure.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">g</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inter.iamb</span><span class="p">(</span><span class="n">sachs</span><span class="p">,</span><span class="w"> </span><span class="n">test</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"smc-cor"</span><span class="p">,</span><span class="w"> </span><span class="n">B</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">500</span><span class="p">,</span><span class="w"> </span><span class="n">alpha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.01</span><span class="p">)</span><span class="w">
</span><span class="n">graphviz.plot</span><span class="p">(</span><span class="n">g</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-4-1.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">g</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">hc</span><span class="p">(</span><span class="n">sachs</span><span class="p">,</span><span class="w"> </span><span class="n">score</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"bge"</span><span class="p">,</span><span class="w"> </span><span class="n">iss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">restart</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">perturb</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="n">graphviz.plot</span><span class="p">(</span><span class="n">g</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-4-2.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">g</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tabu</span><span class="p">(</span><span class="n">sachs</span><span class="p">,</span><span class="w"> </span><span class="n">tabu</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">)</span><span class="w">
</span><span class="n">graphviz.plot</span><span class="p">(</span><span class="n">g</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-4-3.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">g</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mmhc</span><span class="p">(</span><span class="n">sachs</span><span class="p">)</span><span class="w">
</span><span class="n">graphviz.plot</span><span class="p">(</span><span class="n">g</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-4-4.png" class="img-responsive" /></p>

<p>We can apply various techniques such as discretization and model
averaging to improve stability. However, results still poorly
recapitulate the known network structure.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## discritize</span><span class="w">
</span><span class="n">dsachs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">discretize</span><span class="p">(</span><span class="n">sachs</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"hartemink"</span><span class="p">,</span><span class="w"> </span><span class="n">breaks</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">ibreaks</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">60</span><span class="p">,</span><span class="w"> </span><span class="n">idisc</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"quantile"</span><span class="p">)</span><span class="w">
</span><span class="c1">## model average</span><span class="w">
</span><span class="n">boot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">boot.strength</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dsachs</span><span class="p">,</span><span class="w"> </span><span class="n">R</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">500</span><span class="p">,</span><span class="w"> </span><span class="n">algorithm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"tabu"</span><span class="p">,</span><span class="w"> </span><span class="n">algorithm.args</span><span class="o">=</span><span class="nf">list</span><span class="p">(</span><span class="n">tabu</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">))</span><span class="w">
</span><span class="n">boot</span><span class="p">[(</span><span class="n">boot</span><span class="o">$</span><span class="n">strength</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">0.85</span><span class="p">)</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="p">(</span><span class="n">boot</span><span class="o">$</span><span class="n">direction</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">0.5</span><span class="p">),</span><span class="w"> </span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##from   to strength direction
## 1  praf pmek1.000 0.5000000
## 11 pmek praf1.000 0.5000000
## 23 plcg PIP20.994 0.5080483
## 24 plcg PIP30.982 0.5020367
## 44 PIP3 PIP21.000 0.5060000
## 56   p44.42 pakts4731.000 0.5000000
## 66 pakts473   p44.421.000 0.5000000
## 67 pakts473  PKA0.996 0.5000000
## 77  PKA pakts4730.996 0.5000000
## 89  PKC  P381.000 0.5010000
## 90  PKC pjnk1.000 0.5060000
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plot</span><span class="p">(</span><span class="n">boot</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-5-1.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">avg.boot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">averaged.network</span><span class="p">(</span><span class="n">boot</span><span class="p">,</span><span class="w"> </span><span class="n">threshold</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.85</span><span class="p">)</span><span class="w">
</span><span class="n">graphviz.plot</span><span class="p">(</span><span class="n">avg.boot</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-5-2.png" class="img-responsive" /></p>

<p>The original paper suggests that
network interventions are needed for accurate inference. So let’s use
the interventional data. The values of INT identifies which node is
subject to either a stimulatory cue or an inhibitory intervention. Note
that such data requires some degree of prior knowledge about pathway
relationships, which may not always be available.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## interventions</span><span class="w">
</span><span class="n">isachs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.table</span><span class="p">(</span><span class="s2">"data/sachs.interventional.txt"</span><span class="p">,</span><span class="w"> </span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">colClasses</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"factor"</span><span class="p">)</span><span class="w">
</span><span class="n">INT</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">11</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="n">which</span><span class="p">(</span><span class="n">isachs</span><span class="o">$</span><span class="n">INT</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">})</span><span class="w">
</span><span class="n">isachs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">isachs</span><span class="p">[,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">11</span><span class="p">]</span><span class="w">
</span><span class="c1">## factor data</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">isachs</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   praf pmek plcg PIP2 PIP3 p44.42 pakts473 PKA PKC P38 pjnk
## 111123  21   3   1   21
## 211113  32   3   1   21
## 311223  21   3   2   11
## 411113  21   3   1   31
## 511113  21   3   1   11
## 611112  21   3   1   21
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nodes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">isachs</span><span class="p">)</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">INT</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nodes</span><span class="w">
</span><span class="n">start</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">random.graph</span><span class="p">(</span><span class="n">nodes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"melancon"</span><span class="p">,</span><span class="w"> </span><span class="n">num</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">500</span><span class="p">,</span><span class="w"> </span><span class="n">burn.in</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="o">^</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">every</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100</span><span class="p">)</span><span class="w">
</span><span class="n">netlist</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">start</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">net</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="n">tabu</span><span class="p">(</span><span class="n">isachs</span><span class="p">,</span><span class="w"> </span><span class="n">score</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"mbde"</span><span class="p">,</span><span class="w"> </span><span class="n">exp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">INT</span><span class="p">,</span><span class="w"> </span><span class="n">iss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">start</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">net</span><span class="p">,</span><span class="w"> </span><span class="n">tabu</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">)</span><span class="w"> 
</span><span class="p">})</span><span class="w">
</span><span class="n">arcs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">custom.strength</span><span class="p">(</span><span class="n">netlist</span><span class="p">,</span><span class="w"> </span><span class="n">nodes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">cpdag</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="n">bn.mbde</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">averaged.network</span><span class="p">(</span><span class="n">arcs</span><span class="p">,</span><span class="w"> </span><span class="n">threshold</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.85</span><span class="p">)</span><span class="w">
</span><span class="n">graphviz.plot</span><span class="p">(</span><span class="n">bn.mbde</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-6-1.png" class="img-responsive" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bn.mbde</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## 
##   Random/Generated Bayesian network
## 
##   model:
##[plcg][PKC][praf|PKC][PIP3|plcg:PKC][PKA|PKC][pmek|praf:PKA:PKC]
##[PIP2|plcg:PIP3][p44.42|PKA][pakts473|praf:pmek:p44.42:PKA]
##[pjnk|pmek:PKA:PKC][P38|PKA:PKC:pjnk]
##   nodes: 11 
##   arcs:  20 
## undirected arcs: 0 
## directed arcs:   20 
##   average markov blanket size:   4.36 
##   average neighbourhood size:3.64 
##   average branching factor:  1.82 
## 
##   generation algorithm:  Model Averaging 
##   significance threshold:0.85
</code></pre></div></div>

<p>As you can see, with the interventional data, we are generally able to
recapitulate the published results.
<img src="http://localhost:4000/assets/blog/bayesnet-published-results.png" class="img-responsive" /></p>

<p>The original paper also suggested that the large number of cells was necessary for accurate network reconstruction. So what happens if we subsample to a smaller number of cells?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">isachs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.table</span><span class="p">(</span><span class="s2">"data/sachs.interventional.txt"</span><span class="p">,</span><span class="w"> </span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">colClasses</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"factor"</span><span class="p">)</span><span class="w">
</span><span class="nf">dim</span><span class="p">(</span><span class="n">isachs</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 5400   12
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## subsample 50 cells from each intervention</span><span class="w">
</span><span class="n">isachs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="nf">seq_len</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">levels</span><span class="p">(</span><span class="n">isachs</span><span class="o">$</span><span class="n">INT</span><span class="p">))),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">isachs</span><span class="p">[</span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">isachs</span><span class="o">$</span><span class="n">INT</span><span class="p">)</span><span class="o">==</span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="p">]</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="n">nrow</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">50</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="n">return</span><span class="w"> </span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">50</span><span class="p">,])</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}))</span><span class="w">
</span><span class="nf">dim</span><span class="p">(</span><span class="n">isachs</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 300  12
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">INT</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">11</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="n">which</span><span class="p">(</span><span class="n">isachs</span><span class="o">$</span><span class="n">INT</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">})</span><span class="w">
</span><span class="n">isachs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">isachs</span><span class="p">[,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">11</span><span class="p">]</span><span class="w">
</span><span class="n">nodes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">isachs</span><span class="p">)</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">INT</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nodes</span><span class="w">
</span><span class="n">start</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">random.graph</span><span class="p">(</span><span class="n">nodes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"melancon"</span><span class="p">,</span><span class="w"> </span><span class="n">num</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">500</span><span class="p">,</span><span class="w"> </span><span class="n">burn.in</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="o">^</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">every</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100</span><span class="p">)</span><span class="w">
</span><span class="n">netlist</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">start</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">net</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="n">tabu</span><span class="p">(</span><span class="n">isachs</span><span class="p">,</span><span class="w"> </span><span class="n">score</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"mbde"</span><span class="p">,</span><span class="w"> </span><span class="n">exp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">INT</span><span class="p">,</span><span class="w"> </span><span class="n">iss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">start</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">net</span><span class="p">,</span><span class="w"> </span><span class="n">tabu</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">)</span><span class="w"> 
</span><span class="p">})</span><span class="w">
</span><span class="n">arcs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">custom.strength</span><span class="p">(</span><span class="n">netlist</span><span class="p">,</span><span class="w"> </span><span class="n">nodes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">cpdag</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="n">bn.mbde</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">averaged.network</span><span class="p">(</span><span class="n">arcs</span><span class="p">,</span><span class="w"> </span><span class="n">threshold</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.85</span><span class="p">)</span><span class="w">
</span><span class="n">graphviz.plot</span><span class="p">(</span><span class="n">bn.mbde</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://localhost:4000/assets/blog/bayesnet-unnamed-chunk-8-1.png" class="img-responsive" /></p>

<p>As expected, results poorly recapitulate known network structure. Thus,
consistent with the paper findings, a large number of cells and
inclusion of interventional data is needed for accurate network
reconstruction.</p>
:ET